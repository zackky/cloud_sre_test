{{- if .Values.app.enabled -}}
{{- $name := include "app.name" . -}}
{{- $fullName := include "app.fullName" . -}}
{{- $chartName := .Chart.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.app.autoReload }}
    reloader.stakater.com/auto: "true"
    {{- end }}
    {{- with .Values.app.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $name }}
      app.kubernetes.io/instance: {{ .Values.meta.env }}
  {{- with .Values.app.rollingUpdate }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .maxSurge }}
      maxUnavailable: {{ .maxUnavailable }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $name }}
        app.kubernetes.io/instance: {{ .Values.meta.env }}
      annotations:
        prometheus.io/scrape: {{ .Values.app.prometheus.scrape | quote }}
        {{- if .Values.app.prometheus.scrape }}
        prometheus.io/path: {{ .Values.app.prometheus.path | quote }}
        {{- with .Values.app.prometheus.port }}
        prometheus.io/port: {{ . | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $name }}
          image: "{{ .Values.image.repository }}:{{ include "image.tag" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.app.command }}
          command:
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- with .Values.app.args }}
          args:
            {{- range . }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: {{ $chartName }}
              containerPort: {{ .Values.image.port }}
              protocol: TCP
            {{- if and .Values.app.prometheus.scrape .Values.app.prometheus.port }}
            - name: prometheus
              containerPort: {{ .Values.app.prometheus.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.app.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ $chartName }}
            initialDelaySeconds: {{ .Values.app.liveness.delay }}
            periodSeconds: {{ .Values.app.liveness.period }}
            timeoutSeconds: {{ .Values.app.liveness.timeout }}
            failureThreshold: {{ .Values.app.liveness.failure }}
          {{- end }}
          {{- if .Values.app.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.readiness.path }}
              port: {{ $chartName }}
            initialDelaySeconds: {{ .Values.app.readiness.delay }}
            periodSeconds: {{ .Values.app.readiness.period }}
            timeoutSeconds: {{ .Values.app.readiness.timeout }}
            successThreshold: {{ .Values.app.readiness.success }}
            failureThreshold: {{ .Values.app.readiness.failure }}
          {{- end }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- with .Values.app.env }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.configMap.enabled }}
          volumeMounts:
            - name: {{ $fullName }}
              mountPath: {{ .Values.configMap.mountPath }}
              readOnly: {{ .Values.configMap.readOnly }}
          {{- end }}
      {{- if .Values.configMap.enabled }}
      volumes:
        - name: {{ $fullName }}
          configMap:
            name: {{ $fullName }}
      {{- end }}
      restartPolicy: {{ .Values.app.restartPolicy }}
      dnsPolicy: {{ .Values.app.dnsPolicy }}
      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
